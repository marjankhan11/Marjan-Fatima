# -*- coding: utf-8 -*-
"""Rida.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/195Nbmq8YoYJkMLve1i83F_czUfFzu0IE
"""

from sklearn.tree import DecisionTreeClassifier

def decision_tree_predictor(feature1, feature2):
    """
    Predicts a class (0 or 1) based on two input features using a Decision Tree Classifier.

    Parameters:
    feature1 (float): First input feature.
    feature2 (float): Second input feature.

    Returns:
    int: Predicted class (0 or 1).
    """
    # Training data (very simple dummy data)
    X_train = [
        [1.0, 2.0],
        [2.0, 1.0],
        [3.0, 5.0],
        [5.0, 3.0],
        [3.5, 2.0],
        [2.5, 4.5]
    ]
    y_train = [0, 0, 1, 1, 0, 1]  # Labels

    # Create and train the model
    model = DecisionTreeClassifier()
    model.fit(X_train, y_train)

    # Make prediction
    prediction = model.predict([[feature1, feature2]])

    return int(prediction[0])

# Example usage
feature1 = 3.0
feature2 = 4.0
predicted_class = decision_tree_predictor(feature1, feature2)
print(f"The predicted class is: {predicted_class}")